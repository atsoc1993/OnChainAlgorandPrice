{
  "version": 3,
  "sources": [
    "getAlgoPriceContract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMQ;AAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAzB;AACA;AAAsB;;;;;AAAtB;AAHR;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;;;;AAAA;;AA+BK;;AAAA;AAAA;AAAA;;AAAA;AA/BL;;;AAAA;AA+BK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA1BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AALL;;AAAA;;;;;;;;;AAKA;;;AAKiD;AAAA;AAAA;AAAA;AAAwB;AAAA;AAAA;AAAA;AAAqB;AAAvE;AAAA;AAC0B;AAAA;AAAA;AAAA;AAAwB;AAAA;AAAA;AAAA;AAAqB;;AAAvE;AAAA;AAIR;AAFQ;AAER;AAAA;AAAA;AAAP;AAgBR;;;AARiD;AAAA;AAAA;AAAA;AAAwB;AAAA;AAAA;AAAA;AAAqB;AAAvE;AAAA;AAC0B;AAAA;AAAA;AAAA;AAAwB;AAAA;AAAA;AAAA;AAAqB;;AAAvE;AAAA;AAIR;AAFQ;;;AAER;AAAA;AAAA;AAaU;;AAFF;AAEE;AAAjB;AAAiB;AAEjB",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "getAlgoPriceContract.getAlgoPriceContract.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 1000000"
    },
    "8": {
      "op": "bytecblock \"usdc_pool_address\" \"tinyman_router\" 0x151f7c75 0x61737365745f315f7265736572766573 0x61737365745f325f7265736572766573"
    },
    "82": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "84": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "87": {
      "op": "bytec_0 // \"usdc_pool_address\""
    },
    "88": {
      "op": "pushbytes base32(UDFWT5DW3X5RZQYXKQEMZ6MRWAEYHWYP7YUAPZKPW6WJK3JH3OZA) // addr UDFWT5DW3X5RZQYXKQEMZ6MRWAEYHWYP7YUAPZKPW6WJK3JH3OZPL7PO2Y"
    },
    "122": {
      "op": "app_global_put"
    },
    "123": {
      "op": "bytec_1 // \"tinyman_router\""
    },
    "124": {
      "op": "pushint 148607000 // 148607000"
    },
    "129": {
      "op": "app_global_put"
    },
    "130": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "132": {
      "op": "bz main_bare_routing@7",
      "stack_out": []
    },
    "135": {
      "op": "pushbytess 0xa1ebb164 0xbb765f24 // method \"callGetScaledAlgoPrice()uint64\", method \"getTargetUSDCAmountInAlgo(uint64)uint64\""
    },
    "147": {
      "op": "txna ApplicationArgs 0"
    },
    "150": {
      "op": "match main_callGetScaledAlgoPrice_route@5 main_getTargetUSDCAmountInAlgo_route@6"
    },
    "156": {
      "block": "main_after_if_else@9",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "157": {
      "op": "return"
    },
    "158": {
      "block": "main_getTargetUSDCAmountInAlgo_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "160": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "161": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "162": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "164": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "165": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "168": {
      "op": "btoi",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "169": {
      "callsub": "getAlgoPriceContract.getAlgoPriceContract.getTargetUSDCAmountInAlgo",
      "op": "callsub getTargetUSDCAmountInAlgo",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "172": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "173": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "174": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "175": {
      "op": "concat",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "176": {
      "op": "log",
      "stack_out": []
    },
    "177": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "178": {
      "op": "return"
    },
    "179": {
      "block": "main_callGetScaledAlgoPrice_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "181": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "182": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "183": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "185": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "186": {
      "callsub": "getAlgoPriceContract.getAlgoPriceContract.callGetScaledAlgoPrice",
      "op": "callsub callGetScaledAlgoPrice",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "189": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "190": {
      "op": "bytec_2 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "191": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "192": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "193": {
      "op": "log",
      "stack_out": []
    },
    "194": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "195": {
      "op": "return"
    },
    "196": {
      "block": "main_bare_routing@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "198": {
      "op": "bnz main_after_if_else@9",
      "stack_out": []
    },
    "201": {
      "op": "txn ApplicationID"
    },
    "203": {
      "op": "!"
    },
    "204": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "205": {
      "op": "intc_1 // 1"
    },
    "206": {
      "op": "return"
    },
    "207": {
      "subroutine": "getAlgoPriceContract.getAlgoPriceContract.callGetScaledAlgoPrice",
      "params": {},
      "block": "callGetScaledAlgoPrice",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "210": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "211": {
      "op": "bytec_0 // \"usdc_pool_address\"",
      "defined_out": [
        "\"usdc_pool_address\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"usdc_pool_address\""
      ]
    },
    "212": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "213": {
      "error": "check self.usdc_pool_address exists",
      "op": "assert // check self.usdc_pool_address exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "214": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "215": {
      "op": "bytec_1 // \"tinyman_router\"",
      "defined_out": [
        "\"tinyman_router\"",
        "0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0",
        "\"tinyman_router\""
      ]
    },
    "216": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "217": {
      "error": "check self.tinyman_router exists",
      "op": "assert // check self.tinyman_router exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "218": {
      "op": "bytec_3 // 0x61737365745f315f7265736572766573",
      "defined_out": [
        "0x61737365745f315f7265736572766573",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "0x61737365745f315f7265736572766573"
      ]
    },
    "219": {
      "op": "app_local_get_ex",
      "defined_out": [
        "USDC_reserve#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "USDC_reserve#0",
        "tmp%1#0"
      ]
    },
    "220": {
      "op": "pop",
      "stack_out": [
        "USDC_reserve#0"
      ]
    },
    "221": {
      "op": "intc_0 // 0",
      "stack_out": [
        "USDC_reserve#0",
        "0"
      ]
    },
    "222": {
      "op": "bytec_0 // \"usdc_pool_address\"",
      "stack_out": [
        "USDC_reserve#0",
        "0",
        "\"usdc_pool_address\""
      ]
    },
    "223": {
      "op": "app_global_get_ex",
      "defined_out": [
        "USDC_reserve#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "USDC_reserve#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "224": {
      "error": "check self.usdc_pool_address exists",
      "op": "assert // check self.usdc_pool_address exists",
      "stack_out": [
        "USDC_reserve#0",
        "maybe_value%2#0"
      ]
    },
    "225": {
      "op": "intc_0 // 0",
      "stack_out": [
        "USDC_reserve#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "226": {
      "op": "bytec_1 // \"tinyman_router\"",
      "stack_out": [
        "USDC_reserve#0",
        "maybe_value%2#0",
        "0",
        "\"tinyman_router\""
      ]
    },
    "227": {
      "op": "app_global_get_ex",
      "defined_out": [
        "USDC_reserve#0",
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "USDC_reserve#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "228": {
      "error": "check self.tinyman_router exists",
      "op": "assert // check self.tinyman_router exists",
      "stack_out": [
        "USDC_reserve#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ]
    },
    "229": {
      "op": "bytec 4 // 0x61737365745f325f7265736572766573",
      "defined_out": [
        "0x61737365745f325f7265736572766573",
        "USDC_reserve#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "USDC_reserve#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "0x61737365745f325f7265736572766573"
      ]
    },
    "231": {
      "op": "app_local_get_ex",
      "defined_out": [
        "ALGO_reserve#0",
        "USDC_reserve#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "USDC_reserve#0",
        "ALGO_reserve#0",
        "tmp%3#0"
      ]
    },
    "232": {
      "op": "pop",
      "stack_out": [
        "USDC_reserve#0",
        "ALGO_reserve#0"
      ]
    },
    "233": {
      "op": "swap",
      "stack_out": [
        "ALGO_reserve#0",
        "USDC_reserve#0"
      ]
    },
    "234": {
      "op": "intc_2 // 1000000",
      "defined_out": [
        "1000000",
        "ALGO_reserve#0",
        "USDC_reserve#0"
      ],
      "stack_out": [
        "ALGO_reserve#0",
        "USDC_reserve#0",
        "1000000"
      ]
    },
    "235": {
      "op": "*",
      "defined_out": [
        "ALGO_reserve#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "ALGO_reserve#0",
        "tmp%4#0"
      ]
    },
    "236": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "ALGO_reserve#0"
      ]
    },
    "237": {
      "op": "/",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "238": {
      "retsub": true,
      "op": "retsub"
    },
    "239": {
      "subroutine": "getAlgoPriceContract.getAlgoPriceContract.getTargetUSDCAmountInAlgo",
      "params": {
        "target_usdc#0": "uint64"
      },
      "block": "getTargetUSDCAmountInAlgo",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "242": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "243": {
      "op": "bytec_0 // \"usdc_pool_address\"",
      "defined_out": [
        "\"usdc_pool_address\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"usdc_pool_address\""
      ]
    },
    "244": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "245": {
      "error": "check self.usdc_pool_address exists",
      "op": "assert // check self.usdc_pool_address exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "246": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "247": {
      "op": "bytec_1 // \"tinyman_router\"",
      "defined_out": [
        "\"tinyman_router\"",
        "0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0",
        "\"tinyman_router\""
      ]
    },
    "248": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "249": {
      "error": "check self.tinyman_router exists",
      "op": "assert // check self.tinyman_router exists",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0"
      ]
    },
    "250": {
      "op": "bytec_3 // 0x61737365745f315f7265736572766573",
      "defined_out": [
        "0x61737365745f315f7265736572766573",
        "maybe_value%0#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_value%1#0",
        "0x61737365745f315f7265736572766573"
      ]
    },
    "251": {
      "op": "app_local_get_ex",
      "defined_out": [
        "USDC_reserve#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "USDC_reserve#0",
        "tmp%1#0"
      ]
    },
    "252": {
      "op": "pop",
      "stack_out": [
        "USDC_reserve#0"
      ]
    },
    "253": {
      "op": "intc_0 // 0",
      "stack_out": [
        "USDC_reserve#0",
        "0"
      ]
    },
    "254": {
      "op": "bytec_0 // \"usdc_pool_address\"",
      "stack_out": [
        "USDC_reserve#0",
        "0",
        "\"usdc_pool_address\""
      ]
    },
    "255": {
      "op": "app_global_get_ex",
      "defined_out": [
        "USDC_reserve#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "USDC_reserve#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "256": {
      "error": "check self.usdc_pool_address exists",
      "op": "assert // check self.usdc_pool_address exists",
      "stack_out": [
        "USDC_reserve#0",
        "maybe_value%2#0"
      ]
    },
    "257": {
      "op": "intc_0 // 0",
      "stack_out": [
        "USDC_reserve#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "258": {
      "op": "bytec_1 // \"tinyman_router\"",
      "stack_out": [
        "USDC_reserve#0",
        "maybe_value%2#0",
        "0",
        "\"tinyman_router\""
      ]
    },
    "259": {
      "op": "app_global_get_ex",
      "defined_out": [
        "USDC_reserve#0",
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "USDC_reserve#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "260": {
      "error": "check self.tinyman_router exists",
      "op": "assert // check self.tinyman_router exists",
      "stack_out": [
        "USDC_reserve#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ]
    },
    "261": {
      "op": "bytec 4 // 0x61737365745f325f7265736572766573",
      "defined_out": [
        "0x61737365745f325f7265736572766573",
        "USDC_reserve#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "USDC_reserve#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "0x61737365745f325f7265736572766573"
      ]
    },
    "263": {
      "op": "app_local_get_ex",
      "defined_out": [
        "ALGO_reserve#0",
        "USDC_reserve#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "USDC_reserve#0",
        "ALGO_reserve#0",
        "tmp%3#0"
      ]
    },
    "264": {
      "op": "pop",
      "stack_out": [
        "USDC_reserve#0",
        "ALGO_reserve#0"
      ]
    },
    "265": {
      "op": "swap",
      "stack_out": [
        "ALGO_reserve#0",
        "USDC_reserve#0"
      ]
    },
    "266": {
      "op": "pushint 10000 // 10000",
      "defined_out": [
        "10000",
        "ALGO_reserve#0",
        "USDC_reserve#0"
      ],
      "stack_out": [
        "ALGO_reserve#0",
        "USDC_reserve#0",
        "10000"
      ]
    },
    "269": {
      "op": "*",
      "defined_out": [
        "ALGO_reserve#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "ALGO_reserve#0",
        "tmp%4#0"
      ]
    },
    "270": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "ALGO_reserve#0"
      ]
    },
    "271": {
      "op": "/",
      "defined_out": [
        "scaled_algo_price#0"
      ],
      "stack_out": [
        "scaled_algo_price#0"
      ]
    },
    "272": {
      "op": "frame_dig -1",
      "defined_out": [
        "scaled_algo_price#0",
        "target_usdc#0 (copy)"
      ],
      "stack_out": [
        "scaled_algo_price#0",
        "target_usdc#0 (copy)"
      ]
    },
    "274": {
      "op": "intc_2 // 1000000",
      "defined_out": [
        "1000000",
        "scaled_algo_price#0",
        "target_usdc#0 (copy)"
      ],
      "stack_out": [
        "scaled_algo_price#0",
        "target_usdc#0 (copy)",
        "1000000"
      ]
    },
    "275": {
      "op": "*",
      "defined_out": [
        "scaled_algo_price#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "scaled_algo_price#0",
        "tmp%0#0"
      ]
    },
    "276": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "scaled_algo_price#0"
      ]
    },
    "277": {
      "op": "/",
      "defined_out": [
        "amount_in_algo#0"
      ],
      "stack_out": [
        "amount_in_algo#0"
      ]
    },
    "278": {
      "retsub": true,
      "op": "retsub"
    }
  }
}